package gamestates;

import java.io.File;

import org.newdawn.slick.tiled.TiledMap;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Image;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.state.BasicGameState;
import org.newdawn.slick.state.StateBasedGame;
import org.newdawn.slick.Input;

import com.artemis.EntitySystem;
import com.artemis.World;
import com.artemis.Entity;
import com.artemis.SystemManager;

import components.*;
import systems.*;

public class GameplayState extends BasicGameState
{
	private int stateID = 2;
	private static GameplayState gp;
	private TiledMap tm;
	
	private World world;
	private SystemManager systemManager;
	private	EntitySystem collisionSystem;
	private EntitySystem cooldownSystem;
	private EntitySystem hudRenderSystem;
	private EntitySystem inputSystem;
	private EntitySystem mapRenderSystem;
	private EntitySystem physicsSystem;
	private EntitySystem renderingSystem;
	
	public GameplayState(int stateID)
	{
		this.stateID = stateID;
	}
	
	public static GameplayState getInstance()
	{
		if(gp == null)
		{
			gp = new GameplayState(2);
		}
		return gp;
	}
	
	public void init(GameContainer gc, StateBasedGame sbg) throws SlickException 
	{ 
		world = new World();
		systemManager = world.getSystemManager();
		renderingSystem = systemManager.setSystem(new RenderingSystem());
		systemManager.initializeAll();
		
		Entity e = world.createEntity();
		
		e.addComponent(new Position(150,150));
		e.addComponent(new Sprite("Data" + File.separator + "Character Sprites" + File.separator + "wizard.png"));
		e.refresh();
		
	}
	
	public TiledMap getMap()
	{
		return tm;
	}
	


	@Override
	public void render(GameContainer gc, StateBasedGame sbg, Graphics g)
			throws SlickException {
		// TODO Auto-generated method stub
		renderingSystem.process();
	}

	@Override
	public void update(GameContainer gc, StateBasedGame sbg, int delta)
			throws SlickException {
		world.loopStart();
		world.setDelta(delta);
		
		
	}

	@Override
	public int getID() {
		// TODO Auto-generated method stub
		return stateID;
	}
}
