package systems;
import components.Position;
import components.Player;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Input;
import com.artemis.EntityProcessingSystem;
import com.artemis.Entity;
import com.artemis.ComponentMapper;

public class InputSystem extends EntityProcessingSystem{
	private ComponentMapper<Position> pos;
	private ComponentMapper<Player> player;
	private GameContainer gc;
	public InputSystem(GameContainer gc)
	{
		super(Position.class, Player.class);
		this.gc = gc;
	}
	
	public void process(Entity e)
	{
		pos = new ComponentMapper<Position>(Position.class, world);
		player = new ComponentMapper<Player>(Player.class, world);
		Input input = gc.getInput();
		
		if(input.isKeyDown(Input.KEY_DOWN))
		{
			pos.get(e).addY(world.getDelta()/50);
		}
		
		if(input.isKeyDown(Input.KEY_UP))
		{
			pos.get(e).addY(-world.getDelta()/50);
		}
		
		if(input.isKeyDown(Input.KEY_LEFT))
		{
			pos.get(e).addX(-world.getDelta()/50);
		}
		
		if(input.isKeyDown(Input.KEY_RIGHT))
		{
			pos.get(e).addX(world.getDelta()/50);
		}
	}
}
