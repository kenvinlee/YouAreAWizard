package systems;

import gamestates.GameplayState;

import java.io.File;

import org.newdawn.slick.Image;
import org.newdawn.slick.tiled.TiledMap;
import org.newdawn.slick.SlickException;

import com.artemis.Entity;
import com.artemis.EntitySystem;
import com.artemis.utils.ImmutableBag;

public class MapRenderSystem extends EntitySystem{
	private TiledMap tm;
	private Image tree;
	public MapRenderSystem()
	{
		super();
	}
	
	public void initialize()
	{
		tm = GameplayState.getInstance().getMap();
		try {
			tree = new Image("DATA" + File.separator + "Maps" + File.separator + "TREE.png");
		} catch (SlickException e) {
			e.printStackTrace();
		}
	}
	
	protected boolean checkProcessing() {
		return true;
	}

	protected void processEntities(ImmutableBag<Entity> arg0)
	{
		tm.render(0, 0, 0);
		for(int i = 0; i < tm.getWidth(); i++)
		{
			for(int j = 0; j < tm.getHeight(); j++)
			{
				if(tm.getTileProperty(tm.getTileId(i,j,1), "object", "herp").equals("TREE"))
				{
					tree.draw(i*tm.getTileWidth(), j* tm.getTileHeight());
				}
			}
		}
	}

}
